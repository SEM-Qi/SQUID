{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 \
#include "/Users/Gabriele/Documents/Arduino/libraries/ArdunioMAVLink/libraries/mavlink/include/mavlink.h"        // Mavlink interface\
#include <inttypes.h>\
#include "/home/simon/Desktop/arduino-1.0/libraries/mavlink/include/mavlink.h"\
\
uint8_t             buf[MAVLINK_MAX_PACKET_LEN];\
uint16_t            len;\
\
\
void mavlink();\
void comm_receive();\
\
\
void setup() \{ \
  // Initialise Serial & baud rate\
  Serial.begin(115200);\
  Serial.println("Booting...");\
\
  // Set ADC reference voltage to 3.3v\
  analogReference(EXTERNAL);\
\
\}\
\
\
void loop() \{\
  while(true)\{\
    mavlink();\
    delay(1000);\
  \}\
\}\
  \
  void mavlink() \{\
        // Define the system type (see mavlink_types.h for list of possible types)\
        int system_type = MAV_GROUND;\
        int autopilot_type = MAV_AUTOPILOT_GENERIC;\
      \
        // Initialize the required buffers \
        mavlink_message_t   msg;\
        uint8_t             buf[MAVLINK_MAX_PACKET_LEN];\
      \
        // Pack the message\
        // mavlink_message_heartbeat_pack(system id, component id, message container, system type, MAV_AUTOPILOT_GENERIC)\
        mavlink_msg_heartbeat_pack(79, 1, &msg, system_type, autopilot_type);\
      \
        // Copy the message to send buffer \
        //uint16_t len = mavlink_msg_to_send_buffer(buf, &msg);\
        uint16_t len = mavlink_msg_to_send_buffer(buf, &msg);\
\
        // Send the message (.write sends as bytes)\
        Serial.print("Sent ");\
        \
        Serial.print(len,DEC);\
        Serial.print(" mavlink chars = ");\
        Serial.write(buf,len);\
        Serial.println(" ");\
        comm_receive();\
  \}\
  \
void comm_receive() \{ \
      \
        mavlink_message_t msg; \
        mavlink_status_t status;\
      \
        Serial.print("buf = ");\
        Serial.println((char)buf[0]);\
        Serial.print("len = ");\
        Serial.println(len,DEC);\
      \
        //receive data over serial \
        for (char x=0 ; x<len ; x++) \{ \
          uint8_t c = *(buf+x);\
          Serial.print("Receiving Mavlink ASCII# = ");\
          //Serial.println(static_cast<char>(c));  // ASCII\
          Serial.println(c);                     // Number\
      \
          if(mavlink_parse_char(MAVLINK_COMM_0, c, &msg, &status))\{\
            Serial.print("MAVlink message received!");\
            break;\
          \}\
        \}\
\}\
}